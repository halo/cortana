#!/usr/bin/env ruby
require 'rubygems'
require 'optparse'
require 'pathname'

# Finding out the name of this very file
executable = File.basename __FILE__

# Show help
if ARGV.first.nil? || ARGV.include?(%w(-h --help))
  puts
  puts '  Configure your VPN connections on Mac OS for Perfect Privacy'
  puts
  puts "  \033[35mExample: \033[0m\033[0m #{executable} --username peterppuser --password mypps3cret\033[0m"
  puts
  exit 1
end

# Parsing command line options
username = nil
password = nil
ARGV.clone.options do |opts|
  opts.on("-u", "--username=username", String, "Specifies your Perfect Privacy username") { |u| username = u }
  opts.on("-p", "--password=password", String, "Specifies your Perfect Privacy password") { |p| password = p }
  opts.parse!
end

# Bailing out when username or password missing
unless username && password
  puts
  puts '  Please specify your Perfect Privacy username and password'
  puts
  exit 2
end

psk_file = Pathname.new('/tmp/ipsec_psks.csv')

unless psk_file.exist?
  require 'mechanize'

  # Create the virtual browser
  agent = Mechanize.new

  # Login in the member area
  begin
    puts '  Logging in on perfect-privacy.com...'
    login_page = agent.get 'https://www.perfect-privacy.com/member'
  rescue SocketError => exception
    puts
    puts %(  It doesn't look like you're online.)
    puts %(  I need to be online to download the Perfect Privacy server configuration.)
    puts
    exit 3
  end

  login_form = login_page.form action: '/member/'
  login_form.perfectprivacyuser = username
  login_form.perfectprivacypass = password
  agent.submit login_form, login_form.buttons.first

  # Download the CSV file with all servers and PSKs
  puts '  Downloading server configuration...'
  csv = agent.get('https://www.perfect-privacy.com/member/download/?file=ipsec_psks.csv').body
  psk_file.write csv
end

keys = psk_file.read.chomp
servers = keys.split("\n").map { |server| server.split(',') }

# Bail out early to avoid frustration :)
if system('which macosvpn')
  puts "  Using macosvpn version #{`macosvpn -v`.chomp} to create VPN services"
else
  puts
  puts  '  You need to install macosvpn first'
  puts  '  See https://github.com/halo/macosvpn'
  puts
  exit 42
end

servers.each do |subdomain, secret|
  next unless %w(amsterdam london rotterdam steinsel stockholm chicago erfurt frankfurt calais nottingham nuremberg oslo).include?(subdomain)

  # Assembling the macosvpn command
  command = [%(sudo macosvpn create)]
  command << %(--cisco "#{subdomain.capitalize}")
  command << %(--username "#{username}")
  command << %(--password "#{password}")
  command << %(--endpoint "#{subdomain}.perfect-privacy.net")
  command << %(--shared-secret "#{secret}")
  command << %(--force)
  command = command.join(' ')

  system command
end
